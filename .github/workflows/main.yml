name: SCARS.Core CI/CD

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'
      - 'major/*'
  pull_request:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'
      - 'major/*'

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: "versioning"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Print .NET SDK version
      run: dotnet --version
      
    - name: NuGet set access
      run: dotnet nuget add source --username ${{ github.actor }} --password ${{ github.token }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/garethbirduk/index.json"

    - name: Install dependencies
      run: dotnet restore

    - name: Install Yarn (if needed)
      run: yarn --prefer-offline

    - name: Determine new version and update .csproj
      id: set_version
      run: |
        # Call the CSX script to determine the new version and update .csproj
        dotnet script ./scripts/set-version.csx $GITHUB_REF  # Pass in the branch reference

    - name: Build project
      run: dotnet build --no-restore --configuration Release

    - name: Pack NuGet Package
      run: |
        dotnet pack ./SCARS.Core/SCARS.Core.csproj --configuration Release --output ./nupkgs
      env:
        VERSION: ${{ steps.set_version.outputs.version }}

    - name: Deploy NuGet Package
      run: |
        # Push to GitHub Packages
        dotnet nuget push ./nupkgs/*.nupkg --source "github" --api-key ${{ secrets.GH_APIKEY }} --skip-duplicate
      if: github.ref == 'refs/heads/main'  # Only push if it's on the main branch
          
    - name: Deploy Pre-release NuGet Package
      run: |
        # Push pre-release version to GitHub Packages
        dotnet nuget push ./nupkgs/*.nupkg --source "github" --api-key ${{ secrets.GH_APIKEY }} --skip-duplicate --prerelease
      if: github.ref != 'refs/heads/main'  # Only push if it's on any other branch
